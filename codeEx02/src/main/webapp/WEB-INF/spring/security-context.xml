<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="com.ex02.security.CustomAccessDeniedHandler"></bean>
	<!-- <bean id="customLoginSuccess" class="com.ex02.security.CustomLoginSuccessHandler"></bean> -->
	<!--jdbc 기본테이블 방식 안쓴다고봄. <bean id="customPasswordEncoder" class="com.ex02.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailService" class="com.ex02.security.CustomUserDetailsService"></bean>
	
	<!-- <security:http auto-config="true" use-expressions="true"> -->
	<security:http>
		<security:intercept-url pattern="/sample2/all" access="permitAll" />
		<security:intercept-url pattern="/sample2/member" access="hasRole('ROLE_MEMBER')" />  
		<security:intercept-url pattern="/sample2/admin" access="hasRole('ROLE_ADMIN')" />  
		
		<security:form-login login-page="/customLogin" />		
		<!-- <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" /> -->
		
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<!-- <security:csrf disabled="true" /> -->
		
		<security:logout logout-url="/customLogout" invalidate-session="true" />
		
		<!-- 자동로그인 --> 
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800" />
		
		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!--<security:authentication-manager> 
			<security:authentication-provider> 
				<security:jdbc-user-service data-source-ref="dataSource" />
				<security:jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="select userid , userpw	, enabled from tbl_member where userid = ? " 
				authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ? " /> 
				<security:password-encoder	ref="customPasswordEncoder" /> 
				<security:password-encoder ref="bcryptPasswordEncoder"/> 
			</security:authentication-provider> 
		</security:authentication-manager> -->
	
	<!-- inMemory 안쓴다고 봄 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				시큐어티 5 버전은 encoder noop 문자열 추가 해야 함
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->

</beans>
